{"version":3,"sources":["components/student/stdAttnDone.js","components/student/stdAttnNotDone.js","components/student/studentMeet.js","components/student/studentDashboard.js"],"names":["StdCardOnline","props","className","data","attendance_title","style","color","attendance_id","status","attendance_desc","StdCardOffline","type","onClick","sessionStorage","setItem","marginRight","marginBottom","classGroup","getItem","toLowerCase","replace","registerNo","studentName","$","get","settings","ip","name","toUpperCase","StudentMeet","state","meet","setState","fail","toaster","this","map","item","i","MeetList","class","role","Component","title","desc","url","meet_id","window","open","focus","joinMeet","id","require","intr","intr1","intr2","detectFaces","cdetectFaces","cstreameo","streameo","blazeface","count","ccount","ModalOpenAttnOnce","fontSize","margin","display","autoPlay","width","height","attendnceId","setTimeout","stopBothVideoAndAudio","document","getElementById","location","reload","giveAttendance","ModalOpenAttnCont","clearInterval","video","srcObject","getTracks","stop","forEach","track","readyState","Exception","console","log","stopBothVideoAndAudiocont","startEverythingContAttendance","model","ctx","getContext","a","estimateFaces","prediction","length","innerText","drawImage","pred","beginPath","lineWidth","strokeStyle","rect","topLeft","bottomRight","stroke","navigator","mediaDevices","getUserMedia","audio","then","stream","addEventListener","load","setInterval","countToContinuous","StudentDashboard","ready","modal","btn","getElementsByClassName","span","onclick","startEverythingOnceAttendance","umodal","event","target","main","alt","src","mkce","atn_status"],"mappings":"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","file":"static/js/11.7735acef.chunk.js","sourcesContent":["export default function StdCardOnline(props)\n{\n return(\n <div className=\"col-md-5 col-sm-12 p-2 attendance-card card-online m-2\">\n                    <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-12\">\n                        <span className=\"text-2xl\">{props.data.attendance_title}</span>\n                        <br/>\n                         <span style={{color:\"gray\"}}>{props.data.attendance_id}</span>\n                    </div>\n                    <div className=\"col-md-6 col-sm-12 sgs-right\">\n                        Status : {(props.data.status===\"true\")?\"online\":\"offline\"}\n                    </div>\n                    </div>\n                    <hr/>\n                    <br/><p>&nbsp;&nbsp;&nbsp;&nbsp;{props.data.attendance_desc}</p>\n                    <br/>\n                    <div className=\"sgs-center\">\n                        <span className=\"text-gray-500\">You've already done this.</span>\n                    </div>\n                </div>)\n}","export default function StdCardOffline(props)\n{\n return(\n <div className=\"col-md-5 col-sm-12 p-2 attendance-card card-offline m-2\">\n                    <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-12\">\n                        <span className=\"text-2xl\">{props.data.attendance_title}</span>\n                        <br/>\n                         <span style={{color:\"gray\"}}>{props.data.attendance_id}</span>\n                    </div>\n                    <div className=\"col-md-6 col-sm-12 sgs-right text-green-500\">\n                        Status : {(props.data.status===\"true\")?\"online\":\"offline\"}<br/>\n                        Type : {(props.data.type===\"once\")?\"Once\":\"Continuous\"}\n                    </div>\n                    </div>\n                    \n                    <hr/>\n                    <br/><p>&nbsp;&nbsp;&nbsp;&nbsp;{props.data.attendance_desc}</p>\n                    <br/>\n                    <div className=\"sgs-right\">\n                        <button type=\"button\" onClick={()=>{sessionStorage.setItem(\"attnId\",props.data.attendance_id);sessionStorage.setItem(\"atn_type\",props.data.type)}} className=\"btn btn-success open-once-attn\" style={{marginRight:\"15px\",marginBottom:\"10px\"}}><i className=\"material-icons small\">play_arrow</i> Mark Attendance</button>\n                    </div>\n                </div>)\n}","import { Component } from 'react';\nimport $ from 'jquery';\nimport settings from \"../../settings.json\";\n\nlet classGroup = sessionStorage.getItem('classGroup').toLowerCase().replace(/-/g,'_');\nlet registerNo = sessionStorage.getItem('registerNo');\nlet studentName = null\n$.get(settings.ip+'api/student-details/get?class_group='+classGroup+'&register_no='+registerNo,(data,status)=>{\n    studentName = data[0].name.toUpperCase();\n});\n\nclass StudentMeet extends Component{\n    constructor(props){\n        super();\n        this.state = {meet:null};\n        $.get(settings.ip+'api/meet/get-meets?class_group='+classGroup,(data,status)=>{\n            if(status===\"success\")\n            {\n               this.setState({meet:data});\n            }\n                \n        }).fail(()=>{\n            $.toaster('Request Failed...','', 'danger');\n        });\n    }\n\nrender(){\n    if(this.state.meet)\n    return<>\n                <div className=\"meet-create-div\">\n                <h3 className=\"text-xl sgs-center\">Available Meetings</h3><br/>\n                <div className=\"row sgs-center\">\n        <div className=\"col-sm-4 \" style={{color:\"gray\"}}>Meet Name</div>\n        <div className=\"col-sm-4 hide-onphone\" style={{color:\"gray\"}}>Description</div>\n        <div className=\"col-sm-4\"></div>\n    </div>\n                {\n                this.state.meet.map((item,i)=>{\n                   return <MeetList key={i} data={item}/>\n               })\n           }\n                </div>   \n           \n    </>\nelse\n    return<>\n    <div class=\"text-center\">\n  <div class=\"spinner-border\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div></>\n}\n}\nexport default StudentMeet;\n\n\nfunction MeetList(props){\n\n    function joinMeet(){\n        let meetId = props.data.meet_id;\n        let name = (studentName)?studentName:\"Student\"\n        const url = 'https://simclair-sms.azurewebsites.net/build?groupId='+meetId+'&name='+registerNo+'%20'+name+'&auth=bmkfbvf224vgcbhb7vjsv45vfnnmbd'\n        window.open(url, '_blank').focus();\n    }\n\n    return<>\n    <div className=\"row meet-list sgs-center\">\n        <div className=\"col-sm-4\" >{props.data.title}</div>\n        <div className=\"col-sm-4\" >{props.data.desc}</div>\n        <div className=\"col-sm-4\">\n            <button onClick={()=>joinMeet()} style={{marginRight:\"10px\"}} type=\"button\" id=\"join-meet\" className=\"btn btn-success\"><i style={{marginRight:\"6px\"}} className=\"material-icons small left\">send</i>Join</button>\n        </div>\n    </div>\n    </>\n}","import { Component } from \"react\";\nimport $ from 'jquery';\nimport StdCardOnline from \"./stdAttnDone\";\nimport StdCardOffline from \"./stdAttnNotDone\";\nimport mkce from '../../assets/MKCE_Logo_SGS.png';\nimport '../../assets/jquery.toaster';\nimport settings from '../../settings.json';\nimport StudentMeet from \"./studentMeet\";\n\nrequire('@tensorflow/tfjs-core')\nrequire('@tensorflow/tfjs-converter')\nrequire('@tensorflow/tfjs-backend-webgl')\nconst blazeface = require('@tensorflow-models/blazeface');\n\nlet intr;\nlet intr1;\nlet intr2;\nlet detectFaces;\nlet cdetectFaces;\nlet cstreameo;\nlet streameo;\nlet count = 0;\nlet ccount=0;\nfunction ModalOpenAttnOnce()\n{   \n    function giveAttendance()\n    {\n        if(count===1)\n        {\n            let classGroup = sessionStorage.getItem('classGroup').toLowerCase().replace(/-/g,'_');\n            let registerNo = sessionStorage.getItem('registerNo');\n            let attendnceId = sessionStorage.getItem('attnId');\n            $.get(settings.ip+'api/attn/give-attendance?class_group='+classGroup+'&register_no='+registerNo+'&attendance_id='+attendnceId,(data,status)=>{\n            if(status===\"success\")    \n               $.toaster(data,'','success');\n               setTimeout(()=>{\n                stopBothVideoAndAudio();\n                document.getElementById(\"once-atn-modal\").style.display = \"none\";\n                window.location.reload();\n               },800);\n            });\n        }\n        else if (count===0)\n        {\n            $.toaster(\"No face detected\",'','danger');\n        }\n        else if(count>1)\n        {\n            $.toaster(\"More than 1 face detected..\",'','warning');\n        }\n    }\n\n    return(\n    <div id=\"once-atn-modal\" className=\"modal font-roboto\">\n    <div className=\"modal-content\">\n        <div className=\"modal-container sgs-center\">\n            <span className=\"text-xl\">Single Attendance</span><br/>\n                <div>\n                  <span style={{fontSize:\"12px\"}} className=\"hide-onpc text-gray-500\">Use Landscape mode for better performance</span>\n                <div style={{color:\"white\",margin:\"0 auto\"}}>\n      <div>\n        <div >\n          <br/>\n          <video id=\"video\" style={{display:\"none\"}} autoPlay></video>\n          <canvas id=\"canvas\" width=\"600px\" height=\"400px\" style={{margin:\"0 auto\"}}></canvas><br/>\n        </div>\n      </div>\n    {/*  <button className=\"btn btn-success\" onClick={()=>startEverything()}> StartCam</button>\n         <button className=\"btn btn-danger\" onClick={()=>stopBothVideoAndAudio()}> StopCam</button>\n         <button className=\"btn btn-danger\" onClick={()=>clrIntr()}>Pause</button>\n    <button className=\"btn btn-success\" onClick={()=>strtIntr()}> Start</button>*/} \n         <span>Face count : <span id=\"span-count\">{count}</span></span><br/>\n         <button onClick={()=>{giveAttendance()}} className=\"btn btn-success\">Give Attendance</button>\n    </div>\n                </div>\n            </div><br/>\n            <div className=\"sgs-center\">\n            <button id=\"close-once-atn-modal\"className=\"btn btn-danger\">Close</button>\n            </div>\n        </div> \n    </div>\n    );\n}\n\nfunction ModalOpenAttnCont()\n{   \n    return(\n    <div id=\"cont-atn-modal\" className=\"modal font-roboto\">\n    <div className=\"modal-content\">\n        <div className=\"modal-container sgs-center\">\n            <span className=\"text-xl\">Continuous Monitoring</span><br/>\n                <div>\n                  <span style={{fontSize:\"12px\"}} className=\"hide-onpc text-gray-500\">Use Landscape mode for better performance</span>\n                <div style={{color:\"white\",margin:\"0 auto\"}}>\n      <div>\n        <div >\n          <br/>\n          <video id=\"cvideo\" style={{display:\"none\"}} autoPlay></video>\n          <canvas id=\"ccanvas\" width=\"600px\" height=\"400px\" style={{margin:\"0 auto\"}}></canvas><br/>\n        </div>\n      </div>\n         <span>Face count : <span id=\"cspan-count\">{ccount}</span></span><br/>\n    </div>\n                </div>\n            </div><br/>\n            <div className=\"sgs-center\">\n            <button id=\"close-cont-atn-modal\"className=\"btn btn-danger\">Exit</button>\n            </div>\n        </div> \n    </div>\n    );\n}\n\nfunction countToContinuous()\n{\n  console.log('2mins interval faces-'+ccount)\n  let classGroup = sessionStorage.getItem('classGroup').toLowerCase().replace(/-/g,'_');\n  let registerNo = sessionStorage.getItem('registerNo');\n  let attendnceId = sessionStorage.getItem('attnId');\n  if(ccount>0)\n  {\n    $.get(settings.ip+\"/api/attn/count-cont?class_group=\"+classGroup+\"&attn_id=\"+attendnceId+\"&register_no=\"+registerNo,(data,status)=>{\n      if(status===\"success\")\n      {\n        if(data===\"continue\")\n        {\n          //Continue..\n          console.log(\"cont - continue\")\n        }\n        else if(data===\"stop\")\n        {\n          $.toaster(\"Attendance Ended and Submitted Successfully\",\"\",\"success\")\n          setTimeout(()=>{\n            document.getElementById(\"cont-atn-modal\").style.display=\"none\";\n              stopBothVideoAndAudiocont();\n              window.location.reload();\n          },1500);\n        }\n      }\n    }).fail(()=>{\n      $.toaster(\"Attendance failed...\",\"\",\"danger\");\n    });\n  }\n  else if(ccount===0)\n    $.toaster(\"No face detected\",\"\",\"warning\");\n  \n  else\n  $.toaster(\"Attendance failed...\",\"\",\"danger\");\n}\n\nfunction stopBothVideoAndAudio() {\n  try\n  {\n    clearInterval(intr);\n  let video  = document.getElementById(\"video\");\n  for (const track of video.srcObject.getTracks()) {\n    track.stop();\n  }\n  video.srcObject = null;\n  streameo.getTracks().forEach(function(track) {\n      if (track.readyState === 'live') {\n          track.stop();\n      }\n  });\n  }\n  catch(Exception)\n  {\n    console.log(\"Exception at closing/stop video from webcam - once\")\n  }\n  \n}\n\nfunction stopBothVideoAndAudiocont() {\n    try\n    {\n      clearInterval(intr1);\n      clearInterval(intr2);\n    let video  = document.getElementById(\"cvideo\");\n    for (const track of video.srcObject.getTracks()) {\n      track.stop();\n    }\n    video.srcObject = null;\n    cstreameo.getTracks().forEach(function(track) {\n        if (track.readyState === 'live') {\n            track.stop();\n        }\n    });\n    }\n    catch(Exception)\n    {\n      console.log(\"Exception at closing/stop video from webcam - cont\")\n    }\n    \n}\n\n\nfunction startEverythingOnceAttendance()\n{\n\n  let video = document.getElementById(\"video\");\n  let model;\n  let canvas = document.getElementById(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n\n  const setupCamera = () => {\n  navigator.mediaDevices\n      .getUserMedia({\n      audio: false,\n      video: { width: 600, height: 400 },\n      })\n      .then((stream) => {\n        streameo=stream;\n      // stream is a MediaStream object\n      video.srcObject = stream;\n      });\n  };\n\n      detectFaces = async () => {\n        let prediction;\n      try{\n         prediction = await model.estimateFaces(video, false);\n           // print the prediction\n     // console.log(prediction);\n      //console.log(prediction.length)\n      count=prediction.length;\n      document.getElementById(\"span-count\").innerText=count;\n      // draw the video first\n      ctx.drawImage(video, 0, 0, 600, 400);\n\n      prediction.forEach((pred) => {\n        \n        // draw the rectangle enclosing the face\n        ctx.beginPath();\n        ctx.lineWidth = \"3\";\n        ctx.strokeStyle = \"green\";\n        // the last two arguments are width and height\n        // since blazeface returned only the coordinates, \n        // we can find the width and height by subtracting them.\n        ctx.rect(\n          pred.topLeft[0],\n          pred.topLeft[1],\n          pred.bottomRight[0] - pred.topLeft[0],\n          pred.bottomRight[1] - pred.topLeft[1]\n        );\n        ctx.stroke();\n        \n        // drawing small rectangles for the face landmarks\n      /*  ctx.fillStyle = \"red\";\n        pred.landmarks.forEach((landmark) => {\n          ctx.fillRect(landmark[0], landmark[1], 5, 5);\n        });*/\n        \n      });\n      }\n        catch(Exception)\n        {\n            console.log(\"Exception occured at face detection\")\n        }\n    \n    };\n    \n\n  setupCamera();\n\n  video.addEventListener(\"loadeddata\", async () => {\n      model = await blazeface.load();\n      detectFaces();\n    });\n\n    setTimeout(()=>{\n    intr =  setInterval(()=>{\n        detectFaces();\n      },200)\n    },2000);\n}\n\n\nfunction startEverythingContAttendance()\n{\n\n  let video = document.getElementById(\"cvideo\");\n  let model;\n  let canvas = document.getElementById(\"ccanvas\");\n  let ctx = canvas.getContext(\"2d\");\n\n  const setupCamera = () => {\n  navigator.mediaDevices\n      .getUserMedia({\n      audio: false,\n      video: { width: 600, height: 400 },\n      })\n      .then((stream) => {\n        cstreameo=stream;\n      // stream is a MediaStream object\n      video.srcObject = stream;\n      });\n  };\n\n      cdetectFaces = async () => {\n        let prediction;\n      try{\n         prediction = await model.estimateFaces(video, false);\n           // print the prediction\n     // console.log(prediction);\n      //console.log(prediction.length)\n      ccount=prediction.length;\n      document.getElementById(\"cspan-count\").innerText=ccount;\n      // draw the video first\n      ctx.drawImage(video, 0, 0, 600, 400);\n\n      prediction.forEach((pred) => {\n        \n        // draw the rectangle enclosing the face\n        ctx.beginPath();\n        ctx.lineWidth = \"3\";\n        ctx.strokeStyle = \"green\";\n        // the last two arguments are width and height\n        // since blazeface returned only the coordinates, \n        // we can find the width and height by subtracting them.\n        ctx.rect(\n          pred.topLeft[0],\n          pred.topLeft[1],\n          pred.bottomRight[0] - pred.topLeft[0],\n          pred.bottomRight[1] - pred.topLeft[1]\n        );\n        ctx.stroke();\n        \n        // drawing small rectangles for the face landmarks\n        /*ctx.fillStyle = \"red\";\n        pred.landmarks.forEach((landmark) => {\n          ctx.fillRect(landmark[0], landmark[1], 5, 5);\n        });*/\n        \n      });\n      }\n        catch(Exception)\n        {\n            console.log(\"Exception occured at face detection\")\n        }\n    \n    };\n    \n\n  setupCamera();\n\n  video.addEventListener(\"loadeddata\", async () => {\n      model = await blazeface.load();\n      cdetectFaces();\n    });\n\n    setTimeout(()=>{\n    intr1 =  setInterval(()=>{\n        cdetectFaces();\n      },200)\n    },2000);\n\n    setTimeout(()=>{\n      intr2 = setInterval(() => {\n        countToContinuous();\n      }, 120000);\n    },2500);\n}\n\nclass StudentDashboard extends Component{\n    constructor(props)\n    {\n        super();     \n        this.state={data:null}\n        let classGroup = sessionStorage.getItem('classGroup').toLowerCase().replace(/-/g,'_');\n        let registerNo = sessionStorage.getItem('registerNo');\n        $.get(settings.ip+\"api/attn/get-enabled?class_group=\"+classGroup+\"&register_no=\"+registerNo,(data,status)=>{\n            if(status===\"success\")\n            this.setState({data:data});\n            //console.log(this.state);\n        });\n\n\n    }\n\n    render()\n    {   if(this.state.data)\n        {\n            $( document ).ready(function() {\n                var modal = document.getElementById(\"once-atn-modal\");\n                var btn = document.getElementsByClassName(\"open-once-attn\")[0];\n                var span = document.getElementById(\"close-once-atn-modal\");\n                if(btn)\n                {\n                    btn.onclick = function() {\n                      $.toaster(\"Please wait...\",'','success');\n                      setTimeout(()=>{\n                          if(sessionStorage.getItem(\"atn_type\")===\"once\")\n                        {\n                          startEverythingOnceAttendance();\n                          modal.style.display = \"block\";\n                        }\n                        else\n                        {\n                          startEverythingContAttendance();\n                          document.getElementById(\"cont-atn-modal\").style.display=\"block\";\n                        }\n                      },1000);\n                      \n                        }\n                        span.onclick = function() {\n                        stopBothVideoAndAudio();\n                        modal.style.display = \"none\";\n                        }\n                }\n                \n\n                //continuous\n                var umodal = document.getElementById(\"cont-atn-modal\");\n                var uspan = document.getElementById(\"close-cont-atn-modal\");\n                uspan.onclick = function() {\n                stopBothVideoAndAudiocont();\n                umodal.style.display = \"none\";\n                }\n                window.onclick = function(event) {\n                if (event.target===modal) {\n                    stopBothVideoAndAudiocont();\n                    modal.style.display = \"none\";\n                    umodal.style.display = \"none\";\n                }\n                }\n            });\n            let main = <div className=\"sgs-center text-green-400\">\n                <img style={{margin:\"0 auto\"}} alt=\"mkce\" className=\"mkce-logo-dash\" src={mkce}/>\n                <br/>No attendance available at the moment...</div>;\n            //console.log(this.state.data.length)\n            if(this.state.data.length>0)\n            {\n                main =  this.state.data.map((item,i)=>{\n                   \n                    if(item.atn_status===\"present\")\n                        return(<StdCardOnline key={i} data={item}/>)\n                    else\n                     return (<StdCardOffline key={i} data={item}/>)\n                });\n            }\n        return(<div className=\"dashboard-cont\">\n        <div>\n            <span className=\"text-2xl\">Dashboard</span>\n        </div>\n      {<ModalOpenAttnCont/>}\n      {<ModalOpenAttnOnce/>}\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-12\">\n            <StudentMeet/>\n          </div>\n          <div className=\"col-md-8 col-sm-12 meet-create-div\">\n          <div className=\"sgs-center\">\n            <span className=\"text-xl\">Available Attendance</span>\n        </div>\n        <br/>\n          <div className=\"row font-roboto\">\n           {main}\n        </div>\n          </div>\n        </div>\n    </div>)\n        }\n    else\n    return<>\n    <div class=\"text-center\">\n  <div class=\"spinner-border\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div></>\n       \n    }\n}\nexport default StudentDashboard;"],"sourceRoot":""}