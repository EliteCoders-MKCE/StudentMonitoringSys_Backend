{"version":3,"sources":["components/student/stdAttnDone.js","components/student/stdAttnNotDone.js","components/student/studentDashboard.js"],"names":["StdCardOnline","props","className","data","attendance_title","style","color","attendance_id","status","attendance_desc","StdCardOffline","type","onClick","sessionStorage","setItem","marginRight","marginBottom","require","intr","intr1","intr2","detectFaces","cdetectFaces","cstreameo","streameo","blazeface","count","ccount","ModalOpenAttnOnce","id","fontSize","margin","display","autoPlay","width","height","classGroup","getItem","toLowerCase","replace","registerNo","attendnceId","$","get","settings","ip","toaster","setTimeout","stopBothVideoAndAudio","document","getElementById","window","location","reload","giveAttendance","ModalOpenAttnCont","clearInterval","video","srcObject","getTracks","stop","forEach","track","readyState","Exception","console","log","stopBothVideoAndAudiocont","startEverythingContAttendance","model","ctx","getContext","a","estimateFaces","prediction","length","innerText","drawImage","pred","beginPath","lineWidth","strokeStyle","rect","topLeft","bottomRight","stroke","navigator","mediaDevices","getUserMedia","audio","then","stream","addEventListener","load","setInterval","fail","countToContinuous","StudentDashboard","state","setState","this","ready","modal","btn","getElementsByClassName","span","onclick","startEverythingOnceAttendance","umodal","event","target","main","alt","src","mkce","map","item","i","atn_status","Component"],"mappings":"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","file":"static/js/10.8a322399.chunk.js","sourcesContent":["export default function StdCardOnline(props)\n{\n return(\n <div className=\"col-md-5 col-sm-12 p-2 attendance-card card-online m-2\">\n                    <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-12\">\n                        <span className=\"text-2xl\">{props.data.attendance_title}</span>\n                        <br/>\n                         <span style={{color:\"gray\"}}>{props.data.attendance_id}</span>\n                    </div>\n                    <div className=\"col-md-6 col-sm-12 sgs-right\">\n                        Status : {(props.data.status===\"true\")?\"online\":\"offline\"}\n                    </div>\n                    </div>\n                    <hr/>\n                    <br/><p>&nbsp;&nbsp;&nbsp;&nbsp;{props.data.attendance_desc}</p>\n                    <br/>\n                    <div className=\"sgs-center\">\n                        <span className=\"text-gray-500\">You've already done this.</span>\n                    </div>\n                </div>)\n}","export default function StdCardOffline(props)\n{\n return(\n <div className=\"col-md-5 col-sm-12 p-2 attendance-card card-offline m-2\">\n                    <div className=\"row\">\n                    <div className=\"col-md-6 col-sm-12\">\n                        <span className=\"text-2xl\">{props.data.attendance_title}</span>\n                        <br/>\n                         <span style={{color:\"gray\"}}>{props.data.attendance_id}</span>\n                    </div>\n                    <div className=\"col-md-6 col-sm-12 sgs-right text-green-500\">\n                        Status : {(props.data.status===\"true\")?\"online\":\"offline\"}<br/>\n                        Type : {(props.data.type===\"once\")?\"Once\":\"Continuous\"}\n                    </div>\n                    </div>\n                    \n                    <hr/>\n                    <br/><p>&nbsp;&nbsp;&nbsp;&nbsp;{props.data.attendance_desc}</p>\n                    <br/>\n                    <div className=\"sgs-right\">\n                        <button type=\"button\" onClick={()=>{sessionStorage.setItem(\"attnId\",props.data.attendance_id);sessionStorage.setItem(\"atn_type\",props.data.type)}} className=\"btn btn-success open-once-attn\" style={{marginRight:\"15px\",marginBottom:\"10px\"}}><i className=\"material-icons small\">play_arrow</i> Mark Attendance</button>\n                    </div>\n                </div>)\n}","import { Component } from \"react\";\nimport $ from 'jquery';\nimport StdCardOnline from \"./stdAttnDone\";\nimport StdCardOffline from \"./stdAttnNotDone\";\nimport mkce from '../../assets/MKCE_Logo_SGS.png';\nimport '../../assets/jquery.toaster';\nimport settings from '../../settings.json';\n\nrequire('@tensorflow/tfjs-core')\nrequire('@tensorflow/tfjs-converter')\nrequire('@tensorflow/tfjs-backend-webgl')\nconst blazeface = require('@tensorflow-models/blazeface');\n\nlet intr;\nlet intr1;\nlet intr2;\nlet detectFaces;\nlet cdetectFaces;\nlet cstreameo;\nlet streameo;\nlet count = 0;\nlet ccount=0;\nfunction ModalOpenAttnOnce()\n{   \n    function giveAttendance()\n    {\n        if(count===1)\n        {\n            let classGroup = sessionStorage.getItem('classGroup').toLowerCase().replace(/-/g,'_');\n            let registerNo = sessionStorage.getItem('registerNo');\n            let attendnceId = sessionStorage.getItem('attnId');\n            $.get(settings.ip+'api/attn/give-attendance?class_group='+classGroup+'&register_no='+registerNo+'&attendance_id='+attendnceId,(data,status)=>{\n            if(status===\"success\")    \n               $.toaster(data,'','success');\n               setTimeout(()=>{\n                stopBothVideoAndAudio();\n                document.getElementById(\"once-atn-modal\").style.display = \"none\";\n                window.location.reload();\n               },800);\n            });\n        }\n        else if (count===0)\n        {\n            $.toaster(\"No face detected\",'','danger');\n        }\n        else if(count>1)\n        {\n            $.toaster(\"More than 1 face detected..\",'','warning');\n        }\n    }\n\n    return(\n    <div id=\"once-atn-modal\" className=\"modal font-roboto\">\n    <div className=\"modal-content\">\n        <div className=\"modal-container sgs-center\">\n            <span className=\"text-xl\">Single Attendance</span><br/>\n                <div>\n                  <span style={{fontSize:\"12px\"}} className=\"hide-onpc text-gray-500\">Use Landscape mode for better performance</span>\n                <div style={{color:\"white\",margin:\"0 auto\"}}>\n      <div>\n        <div >\n          <br/>\n          <video id=\"video\" style={{display:\"none\"}} autoPlay></video>\n          <canvas id=\"canvas\" width=\"600px\" height=\"400px\" style={{margin:\"0 auto\"}}></canvas><br/>\n        </div>\n      </div>\n    {/*  <button className=\"btn btn-success\" onClick={()=>startEverything()}> StartCam</button>\n         <button className=\"btn btn-danger\" onClick={()=>stopBothVideoAndAudio()}> StopCam</button>\n         <button className=\"btn btn-danger\" onClick={()=>clrIntr()}>Pause</button>\n    <button className=\"btn btn-success\" onClick={()=>strtIntr()}> Start</button>*/} \n         <span>Face count : <span id=\"span-count\">{count}</span></span><br/>\n         <button onClick={()=>{giveAttendance()}} className=\"btn btn-success\">Give Attendance</button>\n    </div>\n                </div>\n            </div><br/>\n            <div className=\"sgs-center\">\n            <button id=\"close-once-atn-modal\"className=\"btn btn-danger\">Close</button>\n            </div>\n        </div> \n    </div>\n    );\n}\n\nfunction ModalOpenAttnCont()\n{   \n    return(\n    <div id=\"cont-atn-modal\" className=\"modal font-roboto\">\n    <div className=\"modal-content\">\n        <div className=\"modal-container sgs-center\">\n            <span className=\"text-xl\">Continuous Monitoring</span><br/>\n                <div>\n                  <span style={{fontSize:\"12px\"}} className=\"hide-onpc text-gray-500\">Use Landscape mode for better performance</span>\n                <div style={{color:\"white\",margin:\"0 auto\"}}>\n      <div>\n        <div >\n          <br/>\n          <video id=\"cvideo\" style={{display:\"none\"}} autoPlay></video>\n          <canvas id=\"ccanvas\" width=\"600px\" height=\"400px\" style={{margin:\"0 auto\"}}></canvas><br/>\n        </div>\n      </div>\n         <span>Face count : <span id=\"cspan-count\">{ccount}</span></span><br/>\n    </div>\n                </div>\n            </div><br/>\n            <div className=\"sgs-center\">\n            <button id=\"close-cont-atn-modal\"className=\"btn btn-danger\">Exit</button>\n            </div>\n        </div> \n    </div>\n    );\n}\n\nfunction countToContinuous()\n{\n  console.log('2mins interval faces-'+ccount)\n  let classGroup = sessionStorage.getItem('classGroup').toLowerCase().replace(/-/g,'_');\n  let registerNo = sessionStorage.getItem('registerNo');\n  let attendnceId = sessionStorage.getItem('attnId');\n  if(ccount>0)\n  {\n    $.get(settings.ip+\"/api/attn/count-cont?class_group=\"+classGroup+\"&attn_id=\"+attendnceId+\"&register_no=\"+registerNo,(data,status)=>{\n      if(status===\"success\")\n      {\n        if(data===\"continue\")\n        {\n          //Continue..\n          console.log(\"cont - continue\")\n        }\n        else if(data===\"stop\")\n        {\n          $.toaster(\"Attendance Ended and Submitted Successfully\",\"\",\"success\")\n          setTimeout(()=>{\n            document.getElementById(\"cont-atn-modal\").style.display=\"none\";\n              stopBothVideoAndAudiocont();\n              window.location.reload();\n          },1500);\n        }\n      }\n    }).fail(()=>{\n      $.toaster(\"Attendance failed...\",\"\",\"danger\");\n    });\n  }\n  else if(ccount===0)\n    $.toaster(\"No face detected\",\"\",\"warning\");\n  \n  else\n  $.toaster(\"Attendance failed...\",\"\",\"danger\");\n}\n\nfunction stopBothVideoAndAudio() {\n  try\n  {\n    clearInterval(intr);\n  let video  = document.getElementById(\"video\");\n  for (const track of video.srcObject.getTracks()) {\n    track.stop();\n  }\n  video.srcObject = null;\n  streameo.getTracks().forEach(function(track) {\n      if (track.readyState === 'live') {\n          track.stop();\n      }\n  });\n  }\n  catch(Exception)\n  {\n    console.log(\"Exception at closing/stop video from webcam - once\")\n  }\n  \n}\n\nfunction stopBothVideoAndAudiocont() {\n    try\n    {\n      clearInterval(intr1);\n      clearInterval(intr2);\n    let video  = document.getElementById(\"cvideo\");\n    for (const track of video.srcObject.getTracks()) {\n      track.stop();\n    }\n    video.srcObject = null;\n    cstreameo.getTracks().forEach(function(track) {\n        if (track.readyState === 'live') {\n            track.stop();\n        }\n    });\n    }\n    catch(Exception)\n    {\n      console.log(\"Exception at closing/stop video from webcam - cont\")\n    }\n    \n}\n\n\nfunction startEverythingOnceAttendance()\n{\n\n  let video = document.getElementById(\"video\");\n  let model;\n  let canvas = document.getElementById(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n\n  const setupCamera = () => {\n  navigator.mediaDevices\n      .getUserMedia({\n      audio: false,\n      video: { width: 600, height: 400 },\n      })\n      .then((stream) => {\n        streameo=stream;\n      // stream is a MediaStream object\n      video.srcObject = stream;\n      });\n  };\n\n      detectFaces = async () => {\n        let prediction;\n      try{\n         prediction = await model.estimateFaces(video, false);\n           // print the prediction\n     // console.log(prediction);\n      //console.log(prediction.length)\n      count=prediction.length;\n      document.getElementById(\"span-count\").innerText=count;\n      // draw the video first\n      ctx.drawImage(video, 0, 0, 600, 400);\n\n      prediction.forEach((pred) => {\n        \n        // draw the rectangle enclosing the face\n        ctx.beginPath();\n        ctx.lineWidth = \"3\";\n        ctx.strokeStyle = \"green\";\n        // the last two arguments are width and height\n        // since blazeface returned only the coordinates, \n        // we can find the width and height by subtracting them.\n        ctx.rect(\n          pred.topLeft[0],\n          pred.topLeft[1],\n          pred.bottomRight[0] - pred.topLeft[0],\n          pred.bottomRight[1] - pred.topLeft[1]\n        );\n        ctx.stroke();\n        \n        // drawing small rectangles for the face landmarks\n      /*  ctx.fillStyle = \"red\";\n        pred.landmarks.forEach((landmark) => {\n          ctx.fillRect(landmark[0], landmark[1], 5, 5);\n        });*/\n        \n      });\n      }\n        catch(Exception)\n        {\n            console.log(\"Exception occured at face detection\")\n        }\n    \n    };\n    \n\n  setupCamera();\n\n  video.addEventListener(\"loadeddata\", async () => {\n      model = await blazeface.load();\n      detectFaces();\n    });\n\n    setTimeout(()=>{\n    intr =  setInterval(()=>{\n        detectFaces();\n      },200)\n    },2000);\n}\n\n\nfunction startEverythingContAttendance()\n{\n\n  let video = document.getElementById(\"cvideo\");\n  let model;\n  let canvas = document.getElementById(\"ccanvas\");\n  let ctx = canvas.getContext(\"2d\");\n\n  const setupCamera = () => {\n  navigator.mediaDevices\n      .getUserMedia({\n      audio: false,\n      video: { width: 600, height: 400 },\n      })\n      .then((stream) => {\n        cstreameo=stream;\n      // stream is a MediaStream object\n      video.srcObject = stream;\n      });\n  };\n\n      cdetectFaces = async () => {\n        let prediction;\n      try{\n         prediction = await model.estimateFaces(video, false);\n           // print the prediction\n     // console.log(prediction);\n      //console.log(prediction.length)\n      ccount=prediction.length;\n      document.getElementById(\"cspan-count\").innerText=ccount;\n      // draw the video first\n      ctx.drawImage(video, 0, 0, 600, 400);\n\n      prediction.forEach((pred) => {\n        \n        // draw the rectangle enclosing the face\n        ctx.beginPath();\n        ctx.lineWidth = \"3\";\n        ctx.strokeStyle = \"green\";\n        // the last two arguments are width and height\n        // since blazeface returned only the coordinates, \n        // we can find the width and height by subtracting them.\n        ctx.rect(\n          pred.topLeft[0],\n          pred.topLeft[1],\n          pred.bottomRight[0] - pred.topLeft[0],\n          pred.bottomRight[1] - pred.topLeft[1]\n        );\n        ctx.stroke();\n        \n        // drawing small rectangles for the face landmarks\n        /*ctx.fillStyle = \"red\";\n        pred.landmarks.forEach((landmark) => {\n          ctx.fillRect(landmark[0], landmark[1], 5, 5);\n        });*/\n        \n      });\n      }\n        catch(Exception)\n        {\n            console.log(\"Exception occured at face detection\")\n        }\n    \n    };\n    \n\n  setupCamera();\n\n  video.addEventListener(\"loadeddata\", async () => {\n      model = await blazeface.load();\n      cdetectFaces();\n    });\n\n    setTimeout(()=>{\n    intr1 =  setInterval(()=>{\n        cdetectFaces();\n      },200)\n    },2000);\n\n    setTimeout(()=>{\n      intr2 = setInterval(() => {\n        countToContinuous();\n      }, 120000);\n    },2500);\n}\n\nclass StudentDashboard extends Component{\n    constructor(props)\n    {\n        super();     \n        this.state={data:null}\n        let classGroup = sessionStorage.getItem('classGroup').toLowerCase().replace(/-/g,'_');\n        let registerNo = sessionStorage.getItem('registerNo');\n        $.get(settings.ip+\"api/attn/get-enabled?class_group=\"+classGroup+\"&register_no=\"+registerNo,(data,status)=>{\n            if(status===\"success\")\n            this.setState({data:data});\n            //console.log(this.state);\n        });\n\n\n    }\n\n    render()\n    {   if(this.state.data)\n        {\n            $( document ).ready(function() {\n                var modal = document.getElementById(\"once-atn-modal\");\n                var btn = document.getElementsByClassName(\"open-once-attn\")[0];\n                var span = document.getElementById(\"close-once-atn-modal\");\n                if(btn)\n                {\n                    btn.onclick = function() {\n                      $.toaster(\"Please wait...\",'','success');\n                      setTimeout(()=>{\n                          if(sessionStorage.getItem(\"atn_type\")===\"once\")\n                        {\n                          startEverythingOnceAttendance();\n                          modal.style.display = \"block\";\n                        }\n                        else\n                        {\n                          startEverythingContAttendance();\n                          document.getElementById(\"cont-atn-modal\").style.display=\"block\";\n                        }\n                      },1000);\n                      \n                        }\n                        span.onclick = function() {\n                        stopBothVideoAndAudio();\n                        modal.style.display = \"none\";\n                        }\n                }\n                \n\n                //continuous\n                var umodal = document.getElementById(\"cont-atn-modal\");\n                var uspan = document.getElementById(\"close-cont-atn-modal\");\n                uspan.onclick = function() {\n                stopBothVideoAndAudiocont();\n                umodal.style.display = \"none\";\n                }\n                window.onclick = function(event) {\n                if (event.target===modal) {\n                    stopBothVideoAndAudiocont();\n                    modal.style.display = \"none\";\n                    umodal.style.display = \"none\";\n                }\n                }\n            });\n            let main = <div className=\"sgs-center text-green-400\">\n                <img style={{margin:\"0 auto\"}} alt=\"mkce\" className=\"mkce-logo-dash\" src={mkce}/>\n                <br/>No attendance available at the moment...</div>;\n            //console.log(this.state.data.length)\n            if(this.state.data.length>0)\n            {\n                main =  this.state.data.map((item,i)=>{\n                   \n                    if(item.atn_status===\"present\")\n                        return(<StdCardOnline key={i} data={item}/>)\n                    else\n                     return (<StdCardOffline key={i} data={item}/>)\n                });\n            }\n        return(<div className=\"dashboard-cont \">\n        <div>\n            <span className=\"text-2xl\">Dashboard</span>\n        </div>\n      {<ModalOpenAttnCont/>}\n      {<ModalOpenAttnOnce/>}\n        <br/>\n        <div className=\"row font-roboto\">\n           {main}\n        </div>\n    </div>)\n        }\n    else\n    return(<>Loading...</>)\n       \n    }\n}\nexport default StudentDashboard;"],"sourceRoot":""}